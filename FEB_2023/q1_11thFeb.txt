926. Flip String to Monotone Increasing

A binary string is monotone increasing if it consists of some number of 0's (possibly none), followed by some number of 1's (also possibly none).

You are given a binary string s. You can flip s[i] changing it from 0 to 1 or from 1 to 0.

Return the minimum number of flips to make s monotone increasing.


C++ Solution :- 

class Solution {
public:
    int minFlipsMonoIncr(string s) {
        int flips = 0, ones = 0;

        // monotone increasing means => 000111 
        // all zeros first and ones after 
        for(char ch: s) {
            if(ch == '1') {
                ones++;
            } else {
                flips++;
            } 

            flips = min(flips, ones);
        } 

        // flips is our answer
        return flips;
    }
};
