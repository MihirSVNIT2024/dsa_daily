53. Maximum Subarray

Given an integer array nums, find the 
subarray with the largest sum, and return its sum.


class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int ans = INT_MIN, sum = 0, k = 0, j = 0; 
        for(int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            // -2, 1, -3, 4, -1, 2, 1, -5, 4
            
            // sum = -2, ans = -2, sum = 0
            // sum = 1, ans = 1
            // sum = -2 ans = -2, sum = 0
            // sum = 4 ans = 4
            // sum = 3 ans = 4
            // sum = 5 ans = 5
            // sum = 6 ans = 6
            // sum = 1 ans = 6
            // sum = 5 ans = 6
            
            // j is used to store the starting index of subarray
            if(ans < sum) {
                ans = sum;
                j = i;
            }
            // k is used to store the ending index of subarray
            if(sum < 0) {
                sum = 0;
                k = i + 1;
            }
        }
        
//         for(int i = k; i <= j; i++) {
//             cout << nums[i] << " ";
//         }
        return ans;
    }
};
